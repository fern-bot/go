// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/seamapi/go/core"
)

type ConnectedAccountsDeleteRequest struct {
	ConnectedAccountId string `json:"connected_account_id"`
	Sync               *bool  `json:"sync,omitempty"`
}

type ConnectedAccountsDeleteResponse struct {
	Ok bool `json:"ok"`

	_rawJSON json.RawMessage
}

func (c *ConnectedAccountsDeleteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConnectedAccountsDeleteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConnectedAccountsDeleteResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConnectedAccountsDeleteResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ConnectedAccountsGetRequest struct {
	typeName                                      string
	ConnectedAccountsGetRequestConnectedAccountId *ConnectedAccountsGetRequestConnectedAccountId
	ConnectedAccountsGetRequestEmail              *ConnectedAccountsGetRequestEmail
}

func NewConnectedAccountsGetRequestFromConnectedAccountsGetRequestConnectedAccountId(value *ConnectedAccountsGetRequestConnectedAccountId) *ConnectedAccountsGetRequest {
	return &ConnectedAccountsGetRequest{typeName: "connectedAccountsGetRequestConnectedAccountId", ConnectedAccountsGetRequestConnectedAccountId: value}
}

func NewConnectedAccountsGetRequestFromConnectedAccountsGetRequestEmail(value *ConnectedAccountsGetRequestEmail) *ConnectedAccountsGetRequest {
	return &ConnectedAccountsGetRequest{typeName: "connectedAccountsGetRequestEmail", ConnectedAccountsGetRequestEmail: value}
}

func (c *ConnectedAccountsGetRequest) UnmarshalJSON(data []byte) error {
	valueConnectedAccountsGetRequestConnectedAccountId := new(ConnectedAccountsGetRequestConnectedAccountId)
	if err := json.Unmarshal(data, &valueConnectedAccountsGetRequestConnectedAccountId); err == nil {
		c.typeName = "connectedAccountsGetRequestConnectedAccountId"
		c.ConnectedAccountsGetRequestConnectedAccountId = valueConnectedAccountsGetRequestConnectedAccountId
		return nil
	}
	valueConnectedAccountsGetRequestEmail := new(ConnectedAccountsGetRequestEmail)
	if err := json.Unmarshal(data, &valueConnectedAccountsGetRequestEmail); err == nil {
		c.typeName = "connectedAccountsGetRequestEmail"
		c.ConnectedAccountsGetRequestEmail = valueConnectedAccountsGetRequestEmail
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, c)
}

func (c ConnectedAccountsGetRequest) MarshalJSON() ([]byte, error) {
	switch c.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "connectedAccountsGetRequestConnectedAccountId":
		return json.Marshal(c.ConnectedAccountsGetRequestConnectedAccountId)
	case "connectedAccountsGetRequestEmail":
		return json.Marshal(c.ConnectedAccountsGetRequestEmail)
	}
}

type ConnectedAccountsGetRequestVisitor interface {
	VisitConnectedAccountsGetRequestConnectedAccountId(*ConnectedAccountsGetRequestConnectedAccountId) error
	VisitConnectedAccountsGetRequestEmail(*ConnectedAccountsGetRequestEmail) error
}

func (c *ConnectedAccountsGetRequest) Accept(visitor ConnectedAccountsGetRequestVisitor) error {
	switch c.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "connectedAccountsGetRequestConnectedAccountId":
		return visitor.VisitConnectedAccountsGetRequestConnectedAccountId(c.ConnectedAccountsGetRequestConnectedAccountId)
	case "connectedAccountsGetRequestEmail":
		return visitor.VisitConnectedAccountsGetRequestEmail(c.ConnectedAccountsGetRequestEmail)
	}
}

type ConnectedAccountsGetResponse struct {
	ConnectedAccount *ConnectedAccount `json:"connected_account,omitempty"`
	Ok               bool              `json:"ok"`

	_rawJSON json.RawMessage
}

func (c *ConnectedAccountsGetResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConnectedAccountsGetResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConnectedAccountsGetResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConnectedAccountsGetResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ConnectedAccountsListResponse struct {
	ConnectedAccounts []*ConnectedAccount `json:"connected_accounts,omitempty"`
	Ok                bool                `json:"ok"`

	_rawJSON json.RawMessage
}

func (c *ConnectedAccountsListResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConnectedAccountsListResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConnectedAccountsListResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConnectedAccountsListResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ConnectedAccountsUpdateResponse struct {
	ConnectedAccount *ConnectedAccount `json:"connected_account,omitempty"`
	Ok               bool              `json:"ok"`

	_rawJSON json.RawMessage
}

func (c *ConnectedAccountsUpdateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConnectedAccountsUpdateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConnectedAccountsUpdateResponse(value)
	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConnectedAccountsUpdateResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ConnectedAccountsUpdateRequest struct {
	ConnectedAccountId            string `json:"connected_account_id"`
	AutomaticallyManageNewDevices *bool  `json:"automatically_manage_new_devices,omitempty"`
}
