// This file was auto-generated by Fern from our API Definition.

package useridentities

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/seamapi/go/core"
	time "time"
)

type UserIdentitiesAddAcsUserRequest struct {
	UserIdentityId string `json:"user_identity_id"`
	AcsUserId      string `json:"acs_user_id"`
}

type UserIdentitiesCreateRequest struct {
	UserIdentityKey *string `json:"user_identity_key,omitempty"`
	EmailAddress    *string `json:"email_address,omitempty"`
	FirstName       *string `json:"first_name,omitempty"`
	LastName        *string `json:"last_name,omitempty"`
}

type UserIdentitiesGrantAccessToDeviceRequest struct {
	UserIdentityId string `json:"user_identity_id"`
	DeviceId       string `json:"device_id"`
}

type UserIdentitiesListAccessibleDevicesRequest struct {
	UserIdentityId string `json:"user_identity_id"`
}

type UserIdentitiesListAcsUsersRequest struct {
	UserIdentityId string `json:"user_identity_id"`
}

type UserIdentitiesRemoveAcsUserRequest struct {
	UserIdentityId string `json:"user_identity_id"`
	AcsUserId      string `json:"acs_user_id"`
}

type UserIdentitiesRevokeAccessToDeviceRequest struct {
	UserIdentityId string `json:"user_identity_id"`
	DeviceId       string `json:"device_id"`
}

type EnrollmentAutomationsLaunchResponseEnrollmentAutomation struct {
	AcsCredentialProvisioningAutomationId string    `json:"acs_credential_provisioning_automation_id"`
	CredentialManagerAcsSystemId          string    `json:"credential_manager_acs_system_id"`
	UserIdentityId                        string    `json:"user_identity_id"`
	CreatedAt                             time.Time `json:"created_at"`
	WorkspaceId                           string    `json:"workspace_id"`
	EnrollmentAutomationId                string    `json:"enrollment_automation_id"`

	_rawJSON json.RawMessage
}

func (e *EnrollmentAutomationsLaunchResponseEnrollmentAutomation) UnmarshalJSON(data []byte) error {
	type unmarshaler EnrollmentAutomationsLaunchResponseEnrollmentAutomation
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*e = EnrollmentAutomationsLaunchResponseEnrollmentAutomation(value)
	e._rawJSON = json.RawMessage(data)
	return nil
}

func (e *EnrollmentAutomationsLaunchResponseEnrollmentAutomation) String() string {
	if len(e._rawJSON) > 0 {
		if value, err := core.StringifyJSON(e._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(e); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", e)
}

type UserIdentitiesCreateResponseUserIdentity struct {
	UserIdentityId  string    `json:"user_identity_id"`
	UserIdentityKey *string   `json:"user_identity_key,omitempty"`
	EmailAddress    *string   `json:"email_address,omitempty"`
	FirstName       *string   `json:"first_name,omitempty"`
	LastName        *string   `json:"last_name,omitempty"`
	CreatedAt       time.Time `json:"created_at"`
	WorkspaceId     string    `json:"workspace_id"`

	_rawJSON json.RawMessage
}

func (u *UserIdentitiesCreateResponseUserIdentity) UnmarshalJSON(data []byte) error {
	type unmarshaler UserIdentitiesCreateResponseUserIdentity
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserIdentitiesCreateResponseUserIdentity(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserIdentitiesCreateResponseUserIdentity) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UserIdentitiesGetRequestUserIdentityId struct {
	UserIdentityId string `json:"user_identity_id"`

	_rawJSON json.RawMessage
}

func (u *UserIdentitiesGetRequestUserIdentityId) UnmarshalJSON(data []byte) error {
	type unmarshaler UserIdentitiesGetRequestUserIdentityId
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserIdentitiesGetRequestUserIdentityId(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserIdentitiesGetRequestUserIdentityId) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UserIdentitiesGetRequestUserIdentityKey struct {
	UserIdentityKey string `json:"user_identity_key"`

	_rawJSON json.RawMessage
}

func (u *UserIdentitiesGetRequestUserIdentityKey) UnmarshalJSON(data []byte) error {
	type unmarshaler UserIdentitiesGetRequestUserIdentityKey
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserIdentitiesGetRequestUserIdentityKey(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserIdentitiesGetRequestUserIdentityKey) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UserIdentitiesGetResponseUserIdentity struct {
	UserIdentityId  string    `json:"user_identity_id"`
	UserIdentityKey *string   `json:"user_identity_key,omitempty"`
	EmailAddress    *string   `json:"email_address,omitempty"`
	FirstName       *string   `json:"first_name,omitempty"`
	LastName        *string   `json:"last_name,omitempty"`
	CreatedAt       time.Time `json:"created_at"`
	WorkspaceId     string    `json:"workspace_id"`

	_rawJSON json.RawMessage
}

func (u *UserIdentitiesGetResponseUserIdentity) UnmarshalJSON(data []byte) error {
	type unmarshaler UserIdentitiesGetResponseUserIdentity
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserIdentitiesGetResponseUserIdentity(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserIdentitiesGetResponseUserIdentity) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UserIdentitiesListResponseUserIdentitiesItem struct {
	UserIdentityId  string    `json:"user_identity_id"`
	UserIdentityKey *string   `json:"user_identity_key,omitempty"`
	EmailAddress    *string   `json:"email_address,omitempty"`
	FirstName       *string   `json:"first_name,omitempty"`
	LastName        *string   `json:"last_name,omitempty"`
	CreatedAt       time.Time `json:"created_at"`
	WorkspaceId     string    `json:"workspace_id"`

	_rawJSON json.RawMessage
}

func (u *UserIdentitiesListResponseUserIdentitiesItem) UnmarshalJSON(data []byte) error {
	type unmarshaler UserIdentitiesListResponseUserIdentitiesItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserIdentitiesListResponseUserIdentitiesItem(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserIdentitiesListResponseUserIdentitiesItem) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
