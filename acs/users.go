// This file was auto-generated by Fern from our API Definition.

package acs

import (
	json "encoding/json"
	fmt "fmt"
	seamapigo "github.com/seamapi/go"
	core "github.com/seamapi/go/core"
	time "time"
)

type UsersAddToAccessGroupRequest struct {
	AcsUserId        string `json:"acs_user_id"`
	AcsAccessGroupId string `json:"acs_access_group_id"`
}

type UsersCreateRequest struct {
	AcsSystemId       string                            `json:"acs_system_id"`
	AcsAccessGroupIds []string                          `json:"acs_access_group_ids,omitempty"`
	UserIdentityId    *string                           `json:"user_identity_id,omitempty"`
	AccessSchedule    *UsersCreateRequestAccessSchedule `json:"access_schedule,omitempty"`
	FullName          *string                           `json:"full_name,omitempty"`
	// Deprecated: use email_address.
	Email        *string `json:"email,omitempty"`
	PhoneNumber  *string `json:"phone_number,omitempty"`
	EmailAddress *string `json:"email_address,omitempty"`
}

type UsersDeleteRequest struct {
	AcsUserId string `json:"acs_user_id"`
}

type UsersGetRequest struct {
	AcsUserId string `json:"acs_user_id"`
}

type UsersListRequest struct {
	UserIdentityId           *string `json:"user_identity_id,omitempty"`
	UserIdentityPhoneNumber  *string `json:"user_identity_phone_number,omitempty"`
	UserIdentityEmailAddress *string `json:"user_identity_email_address,omitempty"`
	AcsSystemId              *string `json:"acs_system_id,omitempty"`
}

type UsersListAccessibleEntrancesRequest struct {
	AcsUserId string `json:"acs_user_id"`
}

type UsersRemoveFromAccessGroupRequest struct {
	AcsUserId        string `json:"acs_user_id"`
	AcsAccessGroupId string `json:"acs_access_group_id"`
}

type UsersSuspendRequest struct {
	AcsUserId string `json:"acs_user_id"`
}

type UsersCreateRequestAccessSchedule struct {
	StartsAt time.Time `json:"starts_at"`
	EndsAt   time.Time `json:"ends_at"`

	_rawJSON json.RawMessage
}

func (u *UsersCreateRequestAccessSchedule) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersCreateRequestAccessSchedule
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersCreateRequestAccessSchedule(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersCreateRequestAccessSchedule) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersCreateResponse struct {
	AcsUser *seamapigo.AcsUser `json:"acs_user,omitempty"`
	Ok      bool               `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersCreateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersCreateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersCreateResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersCreateResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersDeleteResponse struct {
	Ok bool `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersDeleteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersDeleteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersDeleteResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersDeleteResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersGetResponse struct {
	AcsUser *seamapigo.AcsUser `json:"acs_user,omitempty"`
	Ok      bool               `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersGetResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersGetResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersGetResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersGetResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersListAccessibleEntrancesResponse struct {
	AcsEntrances []*UsersListAccessibleEntrancesResponseAcsEntrancesItem `json:"acs_entrances,omitempty"`
	Ok           bool                                                    `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersListAccessibleEntrancesResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersListAccessibleEntrancesResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersListAccessibleEntrancesResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersListAccessibleEntrancesResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersListResponse struct {
	AcsUsers []*seamapigo.AcsUser `json:"acs_users,omitempty"`
	Ok       bool                 `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersListResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersListResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersListResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersListResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersSuspendResponse struct {
	Ok bool `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersSuspendResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersSuspendResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersSuspendResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersSuspendResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersUnsuspendResponse struct {
	Ok bool `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersUnsuspendResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersUnsuspendResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersUnsuspendResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersUnsuspendResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersUpdateRequestAccessSchedule struct {
	StartsAt time.Time `json:"starts_at"`
	EndsAt   time.Time `json:"ends_at"`

	_rawJSON json.RawMessage
}

func (u *UsersUpdateRequestAccessSchedule) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersUpdateRequestAccessSchedule
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersUpdateRequestAccessSchedule(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersUpdateRequestAccessSchedule) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersUpdateResponse struct {
	Ok bool `json:"ok"`

	_rawJSON json.RawMessage
}

func (u *UsersUpdateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UsersUpdateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UsersUpdateResponse(value)
	u._rawJSON = json.RawMessage(data)
	return nil
}

func (u *UsersUpdateResponse) String() string {
	if len(u._rawJSON) > 0 {
		if value, err := core.StringifyJSON(u._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UsersUnsuspendRequest struct {
	AcsUserId string `json:"acs_user_id"`
}

type UsersUpdateRequest struct {
	AccessSchedule *UsersUpdateRequestAccessSchedule `json:"access_schedule,omitempty"`
	AcsUserId      string                            `json:"acs_user_id"`
	FullName       *string                           `json:"full_name,omitempty"`
	// Deprecated: use email_address.
	Email          *string `json:"email,omitempty"`
	PhoneNumber    *string `json:"phone_number,omitempty"`
	EmailAddress   *string `json:"email_address,omitempty"`
	HidAcsSystemId *string `json:"hid_acs_system_id,omitempty"`
}
